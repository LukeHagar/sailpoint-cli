project_name: sail

release:
  prerelease: auto
  draft: true # we only publish after the Windows MSI gets uploaded
  name_template: "SailPoint CLI {{.Version}}"

before:
  hooks:
    - go mod tidy

builds:
  - <<: &build_defaults
      binary: bin/gh
      main: ./
    id: macos
    goos: [darwin]
    goarch: [amd64, arm64]

  - <<: *build_defaults
    id: linux
    goos: [linux]
    goarch: [386, arm, amd64, arm64]
    env:
      - CGO_ENABLED=0

  - <<: *build_defaults
    id: windows
    goos: [windows]
    goarch: [386, amd64, arm64]
    # hooks:
    #   post:
    #     - cmd: ./script/sign-windows-executable.sh '{{ .Path }}'
    #       output: false

archives:
  - id: nix
    builds: [macos, linux]
    <<: &archive_defaults
      name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
    wrap_in_directory: true
    replacements:
      darwin: macOS
    format: tar.gz
    files:
      - LICENSE
  - id: windows
    builds: [windows]
    <<: *archive_defaults
    wrap_in_directory: false
    format: zip
    files:
      - LICENSE

dockers:
  - image_templates:
      - sailpoint/sailpoint-cli:{{.Tag}}
    use: buildx
    dockerfile: Dockerfile
    build_flag_templates:
      - "--platform=linux/amd64"

brews:
  - name: sailpoint-cli
    homepage: "https://github.com/sailpoint-oss/sailpoint-cli"
    tap:
      owner: sailpoint-oss
      name: homebrew-tap
    commit_author:
      name: colin-mckibben-sp
      email: colin.mckibben@sailpoint.com

nfpms:
  - license: MIT
    maintainer: SailPoint
    homepage: https://github.com/sailpoint-oss/sailpoint-cli
    bindir: /usr
    description: The SailPoint Command Line Interface.
    formats:
      - deb
      - rpm
